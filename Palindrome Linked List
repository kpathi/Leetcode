Given a singly linked list, determine if it is a palindrome.

Example 1:

Input: 1->2
Output: false
Example 2:

Input: 1->2->2->1
Output: true



/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public boolean isPalindrome(ListNode head) {
        if(head==null || head.next==null) return true;
        
        ListNode slow=head, fast=head;
        while(fast.next!=null && fast.next.next!=null){
            slow=slow.next;
            fast=fast.next.next;
        }
        slow.next= reverse(slow.next);
        ListNode p=head;
        ListNode q=slow.next;
        while(p!=slow.next && q!=null){
            if(p.val!=q.val) return false;
            p=p.next;
            q=q.next;
        } return true;
    }
        
        
        public ListNode reverse(ListNode n)
        {
            ListNode curr=n;
            ListNode prev=null, next=null;
            while(curr!=null){
                next=curr.next;
                curr.next=prev;
                prev=curr;
                curr=next;
            } return prev;
        }
             
}
