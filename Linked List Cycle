Given a linked list, determine if it has a cycle in it.

Follow up:
Can you solve it without using extra space?

/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public boolean hasCycle(ListNode head) {
         if(head==null) return false;
    ListNode p = head;
    while(p.next!=null && p.next.next!=null) {
        head = head.next;
        p = p.next.next;
        if(head==p) return true;
    }
    return false;

}
}
